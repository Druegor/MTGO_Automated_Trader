//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.239
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AutoItBot.BotServices {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LoggingEventContainer", Namespace="http://schemas.datacontract.org/2004/07/WcfMagicBotService")]
    [System.SerializableAttribute()]
    public partial class LoggingEventContainer : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DomainField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExceptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdentityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LogLevelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoggerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ThreadNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TimestampField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Domain {
            get {
                return this.DomainField;
            }
            set {
                if ((object.ReferenceEquals(this.DomainField, value) != true)) {
                    this.DomainField = value;
                    this.RaisePropertyChanged("Domain");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Exception {
            get {
                return this.ExceptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ExceptionField, value) != true)) {
                    this.ExceptionField = value;
                    this.RaisePropertyChanged("Exception");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Identity {
            get {
                return this.IdentityField;
            }
            set {
                if ((object.ReferenceEquals(this.IdentityField, value) != true)) {
                    this.IdentityField = value;
                    this.RaisePropertyChanged("Identity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LogLevel {
            get {
                return this.LogLevelField;
            }
            set {
                if ((object.ReferenceEquals(this.LogLevelField, value) != true)) {
                    this.LogLevelField = value;
                    this.RaisePropertyChanged("LogLevel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LoggerName {
            get {
                return this.LoggerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LoggerNameField, value) != true)) {
                    this.LoggerNameField = value;
                    this.RaisePropertyChanged("LoggerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ThreadName {
            get {
                return this.ThreadNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ThreadNameField, value) != true)) {
                    this.ThreadNameField = value;
                    this.RaisePropertyChanged("ThreadName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Timestamp {
            get {
                return this.TimestampField;
            }
            set {
                if ((this.TimestampField.Equals(value) != true)) {
                    this.TimestampField = value;
                    this.RaisePropertyChanged("Timestamp");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="BotServices.IWcfAppender")]
    public interface IWcfAppender {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWcfAppender/GetServiceVersion", ReplyAction="http://tempuri.org/IWcfAppender/GetServiceVersionResponse")]
        System.Version GetServiceVersion();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IWcfAppender/AppendLoggingEvent")]
        void AppendLoggingEvent(AutoItBot.BotServices.LoggingEventContainer loggingEvent);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IWcfAppender/AppendLoggingEvents")]
        void AppendLoggingEvents(AutoItBot.BotServices.LoggingEventContainer[] loggingEvents);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IWcfAppenderChannel : AutoItBot.BotServices.IWcfAppender, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WcfAppenderClient : System.ServiceModel.ClientBase<AutoItBot.BotServices.IWcfAppender>, AutoItBot.BotServices.IWcfAppender {
        
        public WcfAppenderClient() {
        }
        
        public WcfAppenderClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WcfAppenderClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WcfAppenderClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WcfAppenderClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Version GetServiceVersion() {
            return base.Channel.GetServiceVersion();
        }
        
        public void AppendLoggingEvent(AutoItBot.BotServices.LoggingEventContainer loggingEvent) {
            base.Channel.AppendLoggingEvent(loggingEvent);
        }
        
        public void AppendLoggingEvents(AutoItBot.BotServices.LoggingEventContainer[] loggingEvents) {
            base.Channel.AppendLoggingEvents(loggingEvents);
        }
    }
}
